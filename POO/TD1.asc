include::lib/globals.asc[]
:tdnum: TD 1
ifdef::eleve[]
:doctitle:  {moduleTitle} - Sujet {tdnum}
endif::eleve[]
ifdef::prof[]
:doctitle: {moduleTitle} - Support {tdnum}
endif::prof[]
ifdef::todoprof[]
:doctitle: {moduleTitle} - DEROULEMENT SEANCE PROF {tdnum}
endif::todoprof[]

= {doctitle}
:Author:  {authorDefault}
:lang: fr
:slideshowlocation: IUT Blagnac
:copyright: {date={localdate}}, {slideshowlocation} *** {author} *** Powered by AsciiDoc and W3C Slidy &#169; 
:incremental:
:source-highlighter: pygments
:numbered: true

// eleve : sujet pour élèves
// prof : support prof pour séance
// todoprof : support AVEC EXPLICATIOSN DEROULEMENT pour profs

//----------- définitions --------------
:sitecours: http://webetud.iut-blagnac.fr/[Support de Cours]
:pre: PreReq
:objtd: ObjTD
:duree: Durée
:depot: À rendre
:lien: Lien
:img: img

//-------------------- Warning si correction -----------
ifdef::prof[]
[CAUTION]
.Version corrigée
=====
Cette version comporte des indications pour les
réponses aux exercices.
=====
endif::prof[]

//-------------------- Cartouche d'entête -----------
[[cartouche]]
[align="left",cols="1,10",width="90%"]
|======================
| {pre}		| S1, notion de type, variables simples, tableaux.
| {objtd}	| *Comprendre l'implantation mémoire des données*.
| {duree}	| *1 séance* de 1,5h
| {depot}	| -
|======================

== Comprendre l'implantation mémoire des données

=== Principe de stockage des données en mémoire : les variables

Une variable permet d'associer

- un identificateur
- un type
- un emplacement mémoire qui contient une valeur

[TIP]
====
Quel que soit le langage, on parle pour une "variable" (sens dépendant du contexte) de :

- *r-value* : rigth value, expression qui a une valeur qui "n'a pas d'adresse", tout ce qui peut se mettre à droite d'une affectation (=). Ex : la valeur +10+.
- *l-value* : left value, expression qui permet d'accéder à un emplacement mémoire, tout ce qui peut se mettre à gauche d'une affectation (=). *Contre exemple* : la valeur +10+.
====

Une variable permet, en utilisant l'identificateur :

- d'accéder à la valeur : on s'intéresse à son aspect l-value
- de modifier le contenu de l'emplacement mémoire avec une valeur du type attendu : on s'intéressera à son aspect une r-value

=== Application : l-value ? r-valeur ?

Dans le code suivant, indiquer quand est ce que l'on s'intéresse à une r-value ou à une l-value

[source,java]
----
public static void test() {
	int i, j, k ;
	double d, e, f
	i = 1; // <1>
	j = i + 10 ; // <2><3>
	k = j ; // 
	e = 10.5; 
	if (e < i) { // <4><5>
		f = j + k ;
		k = (int) (f - e) ;
	}	
}
----
<1> i ? 
<2> j ? 
<3> i ? 
<4> e ? 
<5> i ? 

ifdef::prof[]
[IMPORTANT]
.Solution
====

. l-value
. l-value
. r-value
. r-value
. r-value

====
endif::prof[]



