:moduleTitle: BPOO
:authorDefault:  Dut/Info-S2/M2103
// include::lib/globals.asc[] // temporairement
:tdnum: TD 9 - révisions
ifdef::eleve[]
:doctitle:  {moduleTitle} - Sujet {tdnum}
endif::eleve[]
ifdef::prof[]
:doctitle: {moduleTitle} - Support {tdnum}
endif::prof[]
ifdef::todoprof[]
:doctitle: {moduleTitle} - DEROULEMENT SEANCE PROF {tdnum}
endif::todoprof[]

= {doctitle}
:Author:  {authorDefault}
:lang: fr
:slideshowlocation: IUT Blagnac
:copyright: {date={localdate}}, {slideshowlocation} *** {author} *** Powered by AsciiDoc and W3C Slidy &#169; 
:incremental:
:source-highlighter: pygments
:numbered: true
:iconsdir: icons/
:icons: true

// eleve : sujet pour élèves
// prof : support prof pour séance
// todoprof : support AVEC EXPLICATIONS DEROULEMENT pour profs

//----------- définitions --------------
:sitecours: http://webetud.iut-blagnac.fr/[Support de Cours]
:pre: PreReq
:objtd: ObjTD
:duree: Durée
:depot: À rendre
:lien: Lien
:img: img

ifndef::todoprof[]
//-------------------- Warning si correction -----------
ifdef::prof[]
[CAUTION]
.Version corrigée
=====
Cette version comporte des indications pour les 
réponses aux exercices.
=====
endif::prof[]
endif::todoprof[]


//-------------------- Cartouche d'en-tête -----------
[[cartouche]]
[align="left",cols="1,10",width="90%"]
|======================
| {pre}		| -
| {objtd}	| *Révisions avant contrôle final.*
| {duree}	| *1 séances* de 1.5h.
|======================
// // | {depot}	| -

ifdef::todoprof[]
[IMPORTANT]
====

A revoir car important ou si pas de question :

.	TD1 : implantations mémoires des tableaux, des objets, des tableaux d'objets
.	TD4 : tableau dynamique

..	Faire attention en contrôle : sujets porteront sur des structures de données : ArrayList OU tableau dynamique OU liste chaînée

.	TD5 : Structures chaînées

..	Différencier les déclarations :

...	+Cellule debutChaine;+ => déclare une référence vers une Cellule
...	+debutChaine = newCellule (10, null);+ => 
....	Crée une Cellule.
....	Cellule initialisée : contient la valeur 10 et référence la Cellule suivante null (soit aucune Cellule).
....	Met la référence de la Cellule créée dans débutChaine.
....	=> Crée une structure chaînée de longueur 1 élément.

.	TD7/8 : héritage

..	Bien écrire le *+extends+*
..	Appel super constructeur - super(...) - ou constructeur classe courante - this(...) - pas trop insister sur this(...) mais sur super(...)
.. 	Appel des méthodes héritées - super.methode(...) - :

...	Insister pour limiter les appels super.methode(), à ne faire que SI redéfinition locale existe ET on veut la méthode de la superclasse
...	Différencier les appels dans Voiture/Camion :
....	super.coutTotal() → car redéfinie ET on veut celle de la superclasse
....	this.coutSuppl() → car redéfinie ET on veut la locale
....	this.getKilometrage() → non redéfinie ⇒ pas de question à se poser (this. …)

.	Polymorphisme

..	Polymorphisme de référence : +UneClasse ref;+ => ref peu référencer tout objet instance de UneClasse ou instance d'un sous-classe de uneClasse
..	Liaison dynamique : choix de la méthode au runtime en fonction de l'objet receveur.

...	+ref.methode(...) => 

....	Compilation time : signature de methode() doit exister et être résolue sur la classe de déclaration de ref (UneClasse)
....	Runtime : choix de la méthode methode() en fonction de la classe de l'objet référencé au moment de l'exécution
....	cf. méthode afficher dans les derniers TPs

..	Interface : permet d'ajouter un rôle aux objets d'une classe

...	+implements ...+ peut se lire "je peux, je suis capable de (j'implémente les méthodes)"
...	+extends ...+ peut se lire "je suis un"

Par apport au dernier contrôle :

.	Traces de programme => exactement ce qui est affiché par le programme.
.	Représentations mémoires (en référence au TD1).
.	Classes : ne pas oublier :

..	Déclaration des attributs => private
..	Constructeurs = appel super constructeur ET initialiser tous les attributs

====

[IMPORTANT]
====
Déroulement a priori :

.	Faire la liste des questions
.	Répondre aux questions
.	Reprendre les éléments manquants si besoin.

====
endif::todoprof[]

ifndef::todoprof[]

== Contenu

Blabla 

ifdef::prof[]
[icon="{iconsdir}/solution.png"]
[IMPORTANT]
====
Blabla

blabla

====
endif::prof[]

endif::todoprof[]
