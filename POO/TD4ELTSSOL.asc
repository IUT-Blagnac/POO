:moduleTitle: BPOO
:authorDefault:  Dut/Info-S2/M2103
// include::lib/globals.asc[] // temporairement
:tdnum: TD 4 - Eléments de solution
ifdef::eleve[]
:doctitle:  {moduleTitle} - Sujet {tdnum}
endif::eleve[]
ifdef::prof[]
:doctitle: {moduleTitle} - Support {tdnum}
endif::prof[]
ifdef::todoprof[]
:doctitle: {moduleTitle} - DEROULEMENT SEANCE PROF {tdnum}
endif::todoprof[]





////////////////////
A compiler normal
Prendre support
Apercu avant Print avec réduc 70% pour un exo par page
Puis print
////////////////////




= {doctitle}
:Author:  {authorDefault}
:lang: fr
:slideshowlocation: IUT Blagnac
:copyright: {date={localdate}}, {slideshowlocation} *** {author} *** Powered by AsciiDoc and W3C Slidy &#169; 
:incremental:
:source-highlighter: pygments
:numbered: true
:iconsdir: icons/
:icons: true

// eleve : sujet pour élèves
// prof : support prof pour séance
// todoprof : support AVEC EXPLICATIONS DEROULEMENT pour profs

//----------- définitions --------------
:sitecours: http://webetud.iut-blagnac.fr/[Support de Cours]
:pre: PreReq
:objtd: ObjTD
:duree: Durée
:depot: À rendre
:lien: Lien
:img: img

ifndef::todoprof[]
//-------------------- Warning si correction -----------
ifdef::prof[]
[CAUTION]
.Version corrigée
=====
Cette version comporte des indications pour les 
réponses aux exercices.
=====
endif::prof[]
endif::todoprof[]

ifndef::todoprof[]

*3.2 Exercice : le faire ...*

Code à ajouter.

[source, java]
-----
Scanner lect ;					// TD 4 - Classe Pile
int i, nbValSuppl;
int [] tabCourant ;
lect = new Scanner (System.in) ;
lect.useLocale(Locale.US);
tabCourant = new int [5];
for ( i=0 ; i< tabCourant.length ; i++) {
	tabCourant[i] = lect.nextInt();  // <1> Remplissage
}
System.out.println("   Nb Valeurs en plus ? : -> ");
nbValSuppl = lect.nextInt();

	// A faire ici
	int[] nouvTab = new int [tabCourant.length+nbValSuppl];
	for (i=0;i< tabCourant.length; i++) {
		nouvTab[i] = tabCourant[i];
	}
	tabCourant = nouvTab; // TRES IMPORTANT

for ( i=5 ; i< tabCourant.length ; i++) { // de 5 au nb de valeurs saisies
	tabCourant[i] = lect.nextInt();   // <2> Remplissage complémentaire
}
for ( i=0; i< tabCourant.length ; i++) {
	System.out.println(tabCourant[i]); 
	// Affichera les 5 valeurs saisies au départ en (1)
	// + les valeurs ajoutées en (2)
}
-----

Représentation mémoire.

. Début du programme, en <1> par exemple
+
image:images/td4tabdyn.1.avantcreation.png[]
+
. Pendant la création (code ajouté)
+
image:images/td4tabdyn.2.pendantcreation.png[]
+
. A la fin, après +tab = nouvTab;+, en, <2> par exemple
+
image:images/td4tabdyn.3.aprescreation.png[]

pass::[<span style="page-break-before:always"></span>]

*4.1 Implémentation mémoire de la Pile ...*

1) Avec un élément.

image:images/td4.pile.10.png[]

2) Après empilement d'un nouvel élément 

image:images/td4.pile.20.png[]

3) Après empilement d'un nouvel élément 

image:images/td4.pile.30.png[]

4) Après dépilement d'un élément

image:images/td4.pile.40.png[]

5) Après dépilement d'un élément

image:images/td4.pile.50.png[]

6) Après dépilement d'un élément

image:images/td4.pile.60.png[]

pass::[<span style="page-break-before:always"></span>]

*4.2 Codage classe Pile*

[source, java]
-----
public class Pile {
	private String[] values;
	public Pile() {
		 this.values = new String[0];
	}
	public boolean estVide () {
		return this.values.length == 0 ;
	} // fin Pile
	public String sommet () throws PileException {
		if (this.estVide()) { throw new PileException(); }
		return this.values[this.values.length-1];
	} // fin sommet()
	public void empiler (String elt) {
		String[] nouvTab;
		int i;
		nouvTab = new String[this.values.length + 1];
		for (i=0; i<this.values.length; i++) {
			nouvTab[i] = this.values[i];
		}
		nouvTab[nouvTab.length-1] = elt;
		this.values = nouvTab;
	} // fin empiler()
	public void depiler () throws PileException {
		if (this.estVide()) { throw new PileException(); }
		String[] nouvTab;
		int i;
		nouvTab = new String[this.values.length - 1];
		for (i=0; i<this.values.length-1; i++) {
			nouvTab[i] = this.values[i];
		}
		this.values = nouvTab;
	} // fin depiler()
}
class PileException extends Exception {}
-----

endif::todoprof[]

