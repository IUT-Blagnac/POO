:moduleTitle: BPOO
:authorDefault:  Dut/Info-S2/M2103
// include::lib/globals.asc[] // temporairement
:tdnum: Aide classe Scanner
ifdef::eleve[]
:doctitle:  {moduleTitle} - Sujet {tdnum}
endif::eleve[]
ifdef::prof[]
:doctitle: {moduleTitle} - Support {tdnum}
endif::prof[]
ifdef::todoprof[]
:doctitle: {moduleTitle} - DEROULEMENT SEANCE PROF {tdnum}
endif::todoprof[]

= {doctitle}
:Author:  {authorDefault}
:lang: fr
:slideshowlocation: Your computer
:copyright: {date={localdate}}, {slideshowlocation} *** {author} *** Powered by AsciiDoc and W3C Slidy &#169; 
:incremental!:
:source-highlighter: pygments
:numbered:
:iconsdir: icons/
:icons: true




:eclipse: http://www.eclipse.org/[eclipse]
:eclipseversion: Indigo SR2
:eclipsedownload: http://www.eclipse.org/downloads/packages/eclipse-ide-java-developers/indigosr2[Eclipse Indigo sr2]

//----------- définitions --------------
:sitecours: http://webetud.iut-blagnac.fr/[Support de Cours]
:pre: PreReq
:objtd: ObjTP
:duree: Durée
:depot: À rendre
:lien: Lien
:img: img

//-------------------- Warning si correction -----------
ifdef::prof[]
[IMPORTANT]
.Version corrigée
=====
Cette version comporte des indications pour les réponses aux exercices.
=====
endif::prof[]

ifdef::todoprof[]
[IMPORTANT]
====
====
endif::todoprof[]

ifndef::todoprof[]

== Aide sur la classe Scanner

La classe +Scanner+ est utilisée pour les entrées clavier de données.

Par défaut, la classe +Scanner+ lit les nombres selon le paramétrage de votre machine, c'est-à-dire "à la française", donc avec une *virgule* pour les nombre décimaux.

Exemple : 10,5.

Pour modifier ce paramétrage il faut paramétrer un objet +Scanner+ à l'anglaise pour utiliser un point décimal (10.5). Il faut pour cela utiliser la méthode :

+void useLocale (Locale l);+

Exemple type d'utilisation de la classe +Scanner+ :

[source,java]
----
import java.util.Locale;
import java.util.Scanner;

public class ClasseEssai {
	public static void main(String[] argv) {
		Scanner lect;
		double mn;
		int nb;
		
		lect = new Scanner ( System.in );  // Création du lecteur
		lect.useLocale(Locale.US);  // Paramétrage en "US" -> point décimal
		
		nb = lect.nextInt (); // Lire un int
		mn = lect.nexTDouble ();  // Lire un double -> 10.5 accepté
		// ...
	}
}
----

== Documentation classe Scanner

Les méthodes disponibles sont accessibles dans l'aide Java en ligne http://docs.oracle.com/javase/7/docs/api/java/util/Scanner.html[ici]

Un résumé ici :

++++
<!-- ======== START OF CLASS DATA ======== -->
<h2>
<font size="-1">
java.util</font>
<br>
Class Scanner</h2>
<pre><a href="../../java/lang/Object.html" title="class in java.lang">java.lang.Object</a>
  <img src="../../resources/inherit.gif" alt="extended by "><b>java.util.Scanner</b>
</pre>
<dl>
<dt><b>All Implemented Interfaces:</b> </dt><dd><a href="../../java/util/Iterator.html" title="interface in java.util">Iterator</a>&lt;<a href="../../java/lang/String.html" title="class in java.lang">String</a>&gt;</dd>
</dl>
<hr>
<dl>
<dt><pre>public final class <b>Scanner</b><dt>extends <a href="../../java/lang/Object.html" title="class in java.lang">Object</a></dt><dt>implements <a href="../../java/util/Iterator.html" title="interface in java.util">Iterator</a>&lt;<a href="../../java/lang/String.html" title="class in java.lang">String</a>&gt;</dt></pre></dt></dl>


<p>
A simple text scanner which can parse primitive types and strings using
 regular expressions.

 </p><p>A <code>Scanner</code> breaks its input into tokens using a 
 delimiter pattern, which by default matches whitespace. The resulting 
 tokens may then be converted into values of different types using the 
 various <tt>next</tt> methods.

 </p><p>For example, this code allows a user to read a number from 
 <tt>System.in</tt>:
 </p><blockquote><pre>     Scanner sc = new Scanner(System.in);
     int i = sc.nextInt();
 </pre></blockquote>

 <p>As another example, this code allows <code>long</code> types to be
 assigned from entries in a file <code>myNumbers</code>:
 </p><blockquote><pre>      Scanner sc = new Scanner(new File("myNumbers"));
      while (sc.hasNextLong()) {
          long aLong = sc.nextLong();
      }</pre></blockquote>

 <p>The scanner can also use delimiters other than whitespace. This 
 example reads several items in from a string:
</p><blockquote><pre>     String input = "1 fish 2 fish red fish blue fish";
     Scanner s = new Scanner(input).useDelimiter("\\s*fish\\s*");
     System.out.println(s.nextInt());
     System.out.println(s.nextInt());
     System.out.println(s.next());
     System.out.println(s.next());
     s.close(); </pre></blockquote>
 <p>
 prints the following output:
 </p><blockquote><pre>     1
     2
     red
     blue </pre>

<p></p>

<b>Since:</b></dt>
  <dd>1.5</dd>
</dl>
<hr>

</a><p><a name="number-syntax">

<!-- ======== CONSTRUCTOR SUMMARY ======== -->

</a><a name="constructor_summary"><!-- --></a>
</p><table summary="" border="1" cellpadding="3" cellspacing="0" width="100%">
<tbody><tr class="TableHeadingColor" bgcolor="#CCCCFF">
<th colspan="2" align="left"><font size="+2">
<b>Constructor Summary</b></font></th>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td><code><b><a href="../../java/util/Scanner.html#Scanner(java.io.File)">Scanner</a></b>(<a href="../../java/io/File.html" title="class in java.io">File</a>&nbsp;source)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructs a new <code>Scanner</code> that produces values scanned
 from the specified file.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td><code><b><a href="../../java/util/Scanner.html#Scanner(java.io.File, java.lang.String)">Scanner</a></b>(<a href="../../java/io/File.html" title="class in java.io">File</a>&nbsp;source,
        <a href="../../java/lang/String.html" title="class in java.lang">String</a>&nbsp;charsetName)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructs a new <code>Scanner</code> that produces values scanned
 from the specified file.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td><code><b><a href="../../java/util/Scanner.html#Scanner(java.io.InputStream)">Scanner</a></b>(<a href="../../java/io/InputStream.html" title="class in java.io">InputStream</a>&nbsp;source)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructs a new <code>Scanner</code> that produces values scanned
 from the specified input stream.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td><code><b><a href="../../java/util/Scanner.html#Scanner(java.io.InputStream, java.lang.String)">Scanner</a></b>(<a href="../../java/io/InputStream.html" title="class in java.io">InputStream</a>&nbsp;source,
        <a href="../../java/lang/String.html" title="class in java.lang">String</a>&nbsp;charsetName)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructs a new <code>Scanner</code> that produces values scanned
 from the specified input stream.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td><code><b><a href="../../java/util/Scanner.html#Scanner(java.lang.Readable)">Scanner</a></b>(<a href="../../java/lang/Readable.html" title="interface in java.lang">Readable</a>&nbsp;source)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructs a new <code>Scanner</code> that produces values scanned
 from the specified source.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td><code><b><a href="../../java/util/Scanner.html#Scanner(java.nio.channels.ReadableByteChannel)">Scanner</a></b>(<a href="../../java/nio/channels/ReadableByteChannel.html" title="interface in java.nio.channels">ReadableByteChannel</a>&nbsp;source)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructs a new <code>Scanner</code> that produces values scanned
 from the specified channel.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td><code><b><a href="../../java/util/Scanner.html#Scanner(java.nio.channels.ReadableByteChannel, java.lang.String)">Scanner</a></b>(<a href="../../java/nio/channels/ReadableByteChannel.html" title="interface in java.nio.channels">ReadableByteChannel</a>&nbsp;source,
        <a href="../../java/lang/String.html" title="class in java.lang">String</a>&nbsp;charsetName)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructs a new <code>Scanner</code> that produces values scanned
 from the specified channel.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td><code><b><a href="../../java/util/Scanner.html#Scanner(java.lang.String)">Scanner</a></b>(<a href="../../java/lang/String.html" title="class in java.lang">String</a>&nbsp;source)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructs a new <code>Scanner</code> that produces values scanned
 from the specified string.</td>
</tr>
</tbody></table>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<a name="method_summary"><!-- --></a>
<table summary="" border="1" cellpadding="3" cellspacing="0" width="100%">
<tbody><tr class="TableHeadingColor" bgcolor="#CCCCFF">
<th colspan="2" align="left"><font size="+2">
<b>Method Summary</b></font></th>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;void</code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#close()">close</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Closes this scanner.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;<a href="../../java/util/regex/Pattern.html" title="class in java.util.regex">Pattern</a></code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#delimiter()">delimiter</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the <code>Pattern</code> this <code>Scanner</code> is currently
 using to match delimiters.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;<a href="../../java/lang/String.html" title="class in java.lang">String</a></code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#findInLine(java.util.regex.Pattern)">findInLine</a></b>(<a href="../../java/util/regex/Pattern.html" title="class in java.util.regex">Pattern</a>&nbsp;pattern)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Attempts to find the next occurrence of the specified pattern ignoring
 delimiters.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;<a href="../../java/lang/String.html" title="class in java.lang">String</a></code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#findInLine(java.lang.String)">findInLine</a></b>(<a href="../../java/lang/String.html" title="class in java.lang">String</a>&nbsp;pattern)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Attempts to find the next occurrence of a pattern constructed from the
 specified string, ignoring delimiters.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;<a href="../../java/lang/String.html" title="class in java.lang">String</a></code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#findWithinHorizon(java.util.regex.Pattern, int)">findWithinHorizon</a></b>(<a href="../../java/util/regex/Pattern.html" title="class in java.util.regex">Pattern</a>&nbsp;pattern,
                  int&nbsp;horizon)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Attempts to find the next occurrence of the specified pattern.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;<a href="../../java/lang/String.html" title="class in java.lang">String</a></code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#findWithinHorizon(java.lang.String, int)">findWithinHorizon</a></b>(<a href="../../java/lang/String.html" title="class in java.lang">String</a>&nbsp;pattern,
                  int&nbsp;horizon)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Attempts to find the next occurrence of a pattern constructed from the
 specified string, ignoring delimiters.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;boolean</code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#hasNext()">hasNext</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns true if this scanner has another token in its input.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;boolean</code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#hasNext(java.util.regex.Pattern)">hasNext</a></b>(<a href="../../java/util/regex/Pattern.html" title="class in java.util.regex">Pattern</a>&nbsp;pattern)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns true if the next complete token matches the specified pattern.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;boolean</code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#hasNext(java.lang.String)">hasNext</a></b>(<a href="../../java/lang/String.html" title="class in java.lang">String</a>&nbsp;pattern)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns true if the next token matches the pattern constructed from the 
 specified string.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;boolean</code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#hasNextBigDecimal()">hasNextBigDecimal</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns true if the next token in this scanner's input can be
 interpreted as a <code>BigDecimal</code> using the 
 <a href="../../java/util/Scanner.html#nextBigDecimal()"><code>nextBigDecimal()</code></a> method.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;boolean</code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#hasNextBigInteger()">hasNextBigInteger</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns true if the next token in this scanner's input can be
 interpreted as a <code>BigInteger</code> in the default radix using the 
 <a href="../../java/util/Scanner.html#nextBigInteger()"><code>nextBigInteger()</code></a> method.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;boolean</code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#hasNextBigInteger(int)">hasNextBigInteger</a></b>(int&nbsp;radix)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns true if the next token in this scanner's input can be
 interpreted as a <code>BigInteger</code> in the specified radix using 
 the <a href="../../java/util/Scanner.html#nextBigInteger()"><code>nextBigInteger()</code></a> method.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;boolean</code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#hasNextBoolean()">hasNextBoolean</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns true if the next token in this scanner's input can be
 interpreted as a boolean value using a case insensitive pattern 
 created from the string "true|false".</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;boolean</code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#hasNextByte()">hasNextByte</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns true if the next token in this scanner's input can be
 interpreted as a byte value in the default radix using the 
 <a href="../../java/util/Scanner.html#nextByte()"><code>nextByte()</code></a> method.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;boolean</code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#hasNextByte(int)">hasNextByte</a></b>(int&nbsp;radix)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns true if the next token in this scanner's input can be
 interpreted as a byte value in the specified radix using the 
 <a href="../../java/util/Scanner.html#nextByte()"><code>nextByte()</code></a> method.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;boolean</code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#hasNextDouble()">hasNextDouble</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns true if the next token in this scanner's input can be
 interpreted as a double value using the <a href="../../java/util/Scanner.html#nextDouble()"><code>nextDouble()</code></a> 
 method.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;boolean</code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#hasNextFloat()">hasNextFloat</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns true if the next token in this scanner's input can be
 interpreted as a float value using the <a href="../../java/util/Scanner.html#nextFloat()"><code>nextFloat()</code></a> 
 method.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;boolean</code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#hasNextInt()">hasNextInt</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns true if the next token in this scanner's input can be
 interpreted as an int value in the default radix using the 
 <a href="../../java/util/Scanner.html#nextInt()"><code>nextInt()</code></a> method.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;boolean</code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#hasNextInt(int)">hasNextInt</a></b>(int&nbsp;radix)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns true if the next token in this scanner's input can be
 interpreted as an int value in the specified radix using the 
 <a href="../../java/util/Scanner.html#nextInt()"><code>nextInt()</code></a> method.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;boolean</code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#hasNextLine()">hasNextLine</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns true if there is another line in the input of this scanner.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;boolean</code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#hasNextLong()">hasNextLong</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns true if the next token in this scanner's input can be
 interpreted as a long value in the default radix using the 
 <a href="../../java/util/Scanner.html#nextLong()"><code>nextLong()</code></a> method.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;boolean</code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#hasNextLong(int)">hasNextLong</a></b>(int&nbsp;radix)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns true if the next token in this scanner's input can be
 interpreted as a long value in the specified radix using the 
 <a href="../../java/util/Scanner.html#nextLong()"><code>nextLong()</code></a> method.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;boolean</code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#hasNextShort()">hasNextShort</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns true if the next token in this scanner's input can be
 interpreted as a short value in the default radix using the 
 <a href="../../java/util/Scanner.html#nextShort()"><code>nextShort()</code></a> method.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;boolean</code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#hasNextShort(int)">hasNextShort</a></b>(int&nbsp;radix)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns true if the next token in this scanner's input can be
 interpreted as a short value in the specified radix using the 
 <a href="../../java/util/Scanner.html#nextShort()"><code>nextShort()</code></a> method.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;<a href="../../java/io/IOException.html" title="class in java.io">IOException</a></code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#ioException()">ioException</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the <code>IOException</code> last thrown by this
 <code>Scanner</code>'s underlying <code>Readable</code>.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;<a href="../../java/util/Locale.html" title="class in java.util">Locale</a></code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#locale()">locale</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns this scanner's locale.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;<a href="../../java/util/regex/MatchResult.html" title="interface in java.util.regex">MatchResult</a></code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#match()">match</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the match result of the last scanning operation performed
 by this scanner.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;<a href="../../java/lang/String.html" title="class in java.lang">String</a></code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#next()">next</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Finds and returns the next complete token from this scanner.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;<a href="../../java/lang/String.html" title="class in java.lang">String</a></code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#next(java.util.regex.Pattern)">next</a></b>(<a href="../../java/util/regex/Pattern.html" title="class in java.util.regex">Pattern</a>&nbsp;pattern)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the next token if it matches the specified pattern.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;<a href="../../java/lang/String.html" title="class in java.lang">String</a></code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#next(java.lang.String)">next</a></b>(<a href="../../java/lang/String.html" title="class in java.lang">String</a>&nbsp;pattern)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the next token if it matches the pattern constructed from the 
 specified string.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;<a href="../../java/math/BigDecimal.html" title="class in java.math">BigDecimal</a></code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#nextBigDecimal()">nextBigDecimal</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Scans the next token of the input as a <a href="../../java/math/BigDecimal.html" title="class in java.math"><code>BigDecimal</code></a>.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;<a href="../../java/math/BigInteger.html" title="class in java.math">BigInteger</a></code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#nextBigInteger()">nextBigInteger</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Scans the next token of the input as a <a href="../../java/math/BigInteger.html" title="class in java.math"><code>BigInteger</code></a>.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;<a href="../../java/math/BigInteger.html" title="class in java.math">BigInteger</a></code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#nextBigInteger(int)">nextBigInteger</a></b>(int&nbsp;radix)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Scans the next token of the input as a <a href="../../java/math/BigInteger.html" title="class in java.math"><code>BigInteger</code></a>.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;boolean</code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#nextBoolean()">nextBoolean</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Scans the next token of the input into a boolean value and returns
 that value.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;byte</code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#nextByte()">nextByte</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Scans the next token of the input as a <tt>byte</tt>.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;byte</code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#nextByte(int)">nextByte</a></b>(int&nbsp;radix)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Scans the next token of the input as a <tt>byte</tt>.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;double</code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#nextDouble()">nextDouble</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Scans the next token of the input as a <tt>double</tt>.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;float</code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#nextFloat()">nextFloat</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Scans the next token of the input as a <tt>float</tt>.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;int</code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#nextInt()">nextInt</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Scans the next token of the input as an <tt>int</tt>.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;int</code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#nextInt(int)">nextInt</a></b>(int&nbsp;radix)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Scans the next token of the input as an <tt>int</tt>.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;<a href="../../java/lang/String.html" title="class in java.lang">String</a></code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#nextLine()">nextLine</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Advances this scanner past the current line and returns the input
 that was skipped.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;long</code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#nextLong()">nextLong</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Scans the next token of the input as a <tt>long</tt>.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;long</code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#nextLong(int)">nextLong</a></b>(int&nbsp;radix)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Scans the next token of the input as a <tt>long</tt>.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;short</code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#nextShort()">nextShort</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Scans the next token of the input as a <tt>short</tt>.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;short</code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#nextShort(int)">nextShort</a></b>(int&nbsp;radix)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Scans the next token of the input as a <tt>short</tt>.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;int</code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#radix()">radix</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns this scanner's default radix.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;void</code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#remove()">remove</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The remove operation is not supported by this implementation of
 <code>Iterator</code>.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;<a href="../../java/util/Scanner.html" title="class in java.util">Scanner</a></code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#reset()">reset</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Resets this scanner.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;<a href="../../java/util/Scanner.html" title="class in java.util">Scanner</a></code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#skip(java.util.regex.Pattern)">skip</a></b>(<a href="../../java/util/regex/Pattern.html" title="class in java.util.regex">Pattern</a>&nbsp;pattern)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Skips input that matches the specified pattern, ignoring delimiters.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;<a href="../../java/util/Scanner.html" title="class in java.util">Scanner</a></code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#skip(java.lang.String)">skip</a></b>(<a href="../../java/lang/String.html" title="class in java.lang">String</a>&nbsp;pattern)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Skips input that matches a pattern constructed from the specified
 string.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;<a href="../../java/lang/String.html" title="class in java.lang">String</a></code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#toString()">toString</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the string representation of this <code>Scanner</code>.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;<a href="../../java/util/Scanner.html" title="class in java.util">Scanner</a></code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#useDelimiter(java.util.regex.Pattern)">useDelimiter</a></b>(<a href="../../java/util/regex/Pattern.html" title="class in java.util.regex">Pattern</a>&nbsp;pattern)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets this scanner's delimiting pattern to the specified pattern.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;<a href="../../java/util/Scanner.html" title="class in java.util">Scanner</a></code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#useDelimiter(java.lang.String)">useDelimiter</a></b>(<a href="../../java/lang/String.html" title="class in java.lang">String</a>&nbsp;pattern)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets this scanner's delimiting pattern to a pattern constructed from
 the specified <code>String</code>.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;<a href="../../java/util/Scanner.html" title="class in java.util">Scanner</a></code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#useLocale(java.util.Locale)">useLocale</a></b>(<a href="../../java/util/Locale.html" title="class in java.util">Locale</a>&nbsp;locale)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets this scanner's locale to the specified locale.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;<a href="../../java/util/Scanner.html" title="class in java.util">Scanner</a></code></font></td>
<td><code><b><a href="../../java/util/Scanner.html#useRadix(int)">useRadix</a></b>(int&nbsp;radix)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets this scanner's default radix to the specified radix.</td>
</tr>
</tbody></table>
&nbsp;<a name="methods_inherited_from_class_java.lang.Object"><!-- --></a>
<table summary="" border="1" cellpadding="3" cellspacing="0" width="100%">
<tbody><tr class="TableSubHeadingColor" bgcolor="#EEEEFF">
<th align="left"><b>Methods inherited from class java.lang.<a href="../../java/lang/Object.html" title="class in java.lang">Object</a></b></th>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td><code><a href="../../java/lang/Object.html#clone()">clone</a>, <a href="../../java/lang/Object.html#equals(java.lang.Object)">equals</a>, <a href="../../java/lang/Object.html#finalize()">finalize</a>, <a href="../../java/lang/Object.html#getClass()">getClass</a>, <a href="../../java/lang/Object.html#hashCode()">hashCode</a>, <a href="../../java/lang/Object.html#notify()">notify</a>, <a href="../../java/lang/Object.html#notifyAll()">notifyAll</a>, <a href="../../java/lang/Object.html#wait()">wait</a>, <a href="../../java/lang/Object.html#wait(long)">wait</a>, <a href="../../java/lang/Object.html#wait(long, int)">wait</a></code></td>
</tr>
</tbody></table>
&nbsp;
<p>

++++

endif::todoprof[]
