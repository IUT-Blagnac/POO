// ------------------------------------------
//  Created by Jean-Michel Bruel on 2012-10-19.
//  Copyright (c) 2012 IRIT/U. Toulouse. All rights reserved.
// ------------------------------------------
:title: Outils *UML*
// ------------------------------------------
:doctype: article
:description:
:keywords:
:Author: jean-michel.bruel@univ-tlse2.fr
:Author Initials: JMB
//:Email: jean-michel.bruel@univ-tlse2.fr
:Revision: 1.0
:localdate: {sys: date +%d/%m/%Y}
:Date: {localdate}
:startdate: 2012-10-19

include::definitions.txt[]

//--------------------- dzslides
ifdef::slides[]
:dzslides-style: tomorrow
//:dzslides-style: stormy, watermelon, tomorrow, truffle, statement, default
:dzslides-transition: fade
:dzslides-fonts: family=Yanone+Kaffeesatz:400,700,200,300&family=Cedarville+Cursive
:dzslides-highlight: asciidoctor
//:dzslides-highlight: monokai
:source-highlighter: highlightjs
:dzslides-status:
:topic: .topic
:intro: .topic.intro
:statement: .topic.statement
:incremental: .incremental
:source: .topic.source
:linkcss:
endif::slides[]

//--------------------- cours
ifndef::slides[]
:source-highlighter: highlight
:topic:
:intro:
:statement:
:incremental: %step
:source:
endif::slides[]


// ------------------------------------------ definitions
ifndef::definitions[]
include::../definitions.txt[]
endif::definitions[]
:androidicon: Android icon:android[]
:iosicon: http://www.apple.com/fr/ios/[iOS icon:apple[]]

:slidesurl: http://jmbhome.heroku.com/talks
:images: images

= Outils *UML*
Jean-Michel Bruel - {localdate}

// ------------------------------------------ plan
:numbered:
[{intro}]
== icon:book[] Au programme aujourd'hui

ifdef::slides[== Plan]

[{incremental}]
- Retours sur DS et DSS
- Outils UML (demo)
- Organisation du module après les vacances

// ------------------------------------------ wrap up
:numbered:
[{intro}]
== Diagramme de séquence : *subtilités*

[{topic}]
== Opérations

Un ensemble d'opérations définit le comportement de l’objet (ex : `setVitesse(valeur)`),
c’est à dire son interface.

image:voiture.png["Exemple de classe avec opération",width="20%"]

image:encapsulation.png["Opérations et objet",width="40%"]

[{topic}]
== Notions avancées

* Instructions itératives et conditionnelles
* Mieux vaut utiliser un diagramme d'activité
* Cadres d'interaction
** `loop` (boucle)
** `alt` (alternative)
** `opt` (optionel)
** `par` (parallèle)
** `region` (région critique - un seul thread à la fois)

[{topic}]
== Exemple

image:fowl1.png["Un algorithme",width="30%"]
image:fowl2.png["Sa modélisation",width="60%"]

[{topic}]
== Exemple de conceptions

image:fowl3.png["Conception 'centralisée'",width="80%"]

[{topic}]
== Exemple de conceptions (suite)

image:fowl4.png["Conception 'objet'",width="80%"]

[{topic}]
== Diagramme de séquence système (DSS)

Bien que non présent dans UML, il est courant de trouver un diagramme de séquence particulier, le
*diagramme de séquence système* ou *DSS*, où on ne représente qu'un seul objet : le système en cours de développement lui-même.

image:dssexp1.png["Exemple de DSS",width="40%"]

[{topic}]
== Lien entre UC, DSS et DS

La décomposition hiérarchique permet de réaliser une description "_TOP-DOWN_" du système à réaliser.

On fait un Diagramme de Séquence Système pour chaque UC (issu du Diagramme d’UC) pour déterminer les échanges d’informations entre l’acteur et le système.

Ensuite on fait un Diagramme de Séquence (DS) pour décrire comment les objets composants le système (issus du Diagramme de Classes) collaborent pour réaliser le traitement demandé.

[{topic}]
== Exemple

image:ucexp1.png["Diagramme d'UC",width="70%"]

[{topic}]
== Exemple

image:dssexp1.png["Le DSS correspondant",width="70%"]

[{topic}]
== Exemple

image:dsexp1.png["Le DS correspondant",width="100%"]

[{intro}]
== Outils

[{topic}]
== Au choix

- {plantuml}
- {staruml}

[{intro}]
== Projet de fin de semestre

[{topic}]
== Projet de fin de semestre

- Par équipe
- Note uniquement sur les modèles


[{topic}]
== Ready for a quizz?

image::icons/tuxteacher.png[]

ifdef::slides[]
// ------------------------------------------ The end
[{intro}]
== *The End* {nbsp} {nbsp} {nbsp} [detail]#(for me!)#

endif::slides[]

ifndef::slides[]

== About...

**********************************************************************
Document généré par mailto:{email}[{author}] via {asciidoc} (version +8.6.8+) de 'Stuart Rackham'.
La version file:main.deckjs.html[présentation] a été générée en utilisant {deckjs} (C) de 'Qingping Hou'.
Pour l'instant ce document est libre d'utilisation et géré par la 'Licence Creative Commons'.
image:{images}/icons/88x31.png["Licence Creative
Commons",style="border-width:0",link="http://creativecommons.org/licenses/by-sa/3.0/"]
http://creativecommons.org/licenses/by-sa/3.0/[licence Creative Commons Paternité - Partage à l&#39;Identique 3.0 non transposé].
**********************************************************************

endif::slides[]
